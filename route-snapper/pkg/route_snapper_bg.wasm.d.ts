/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export const __wbg_jsroutesnapper_free: (a: number, b: number) => void;
export const jsroutesnapper_new: (a: number, b: number) => [number, number, number];
export const jsroutesnapper_setRouteConfig: (a: number, b: any) => void;
export const jsroutesnapper_setAreaMode: (a: number) => void;
export const jsroutesnapper_getConfig: (a: number) => [number, number];
export const jsroutesnapper_toFinalFeature: (a: number) => [number, number];
export const jsroutesnapper_renderGeojson: (a: number) => [number, number];
export const jsroutesnapper_toggleSnapMode: (a: number) => void;
export const jsroutesnapper_onMouseMove: (a: number, b: number, c: number, d: number) => number;
export const jsroutesnapper_onClick: (a: number) => void;
export const jsroutesnapper_onDragStart: (a: number) => number;
export const jsroutesnapper_onMouseUp: (a: number) => number;
export const jsroutesnapper_clearState: (a: number) => void;
export const jsroutesnapper_editExisting: (a: number, b: any) => [number, number];
export const jsroutesnapper_debugRenderGraph: (a: number) => [number, number];
export const jsroutesnapper_debugSnappableNodes: (a: number) => [number, number];
export const jsroutesnapper_routeNameForWaypoints: (a: number, b: any) => [number, number, number, number];
export const jsroutesnapper_addSnappedWaypoint: (a: number, b: number, c: number) => void;
export const jsroutesnapper_undo: (a: number) => void;
export const jsroutesnapper_calculateRoute: (a: number, b: any) => [number, number, number, number];
export const jsroutesnapper_getExtraNodes: (a: number, b: any, c: any) => [number, number, number, number];
export const __wbindgen_malloc: (a: number, b: number) => number;
export const __wbindgen_realloc: (a: number, b: number, c: number, d: number) => number;
export const __wbindgen_exn_store: (a: number) => void;
export const __externref_table_alloc: () => number;
export const __wbindgen_export_4: WebAssembly.Table;
export const __wbindgen_free: (a: number, b: number, c: number) => void;
export const __externref_table_dealloc: (a: number) => void;
export const __wbindgen_start: () => void;
